// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import model "github.com/VladPetriv/scanner_backend/internal/model"

// ChannelService is an autogenerated mock type for the ChannelService type
type ChannelService struct {
	mock.Mock
}

// GetChannel provides a mock function with given fields: channelID
func (_m *ChannelService) GetChannel(channelID int) (*model.Channel, error) {
	ret := _m.Called(channelID)

	var r0 *model.Channel
	if rf, ok := ret.Get(0).(func(int) *model.Channel); ok {
		r0 = rf(channelID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(channelID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetChannelByName provides a mock function with given fields: name
func (_m *ChannelService) GetChannelByName(name string) (*model.Channel, error) {
	ret := _m.Called(name)

	var r0 *model.Channel
	if rf, ok := ret.Get(0).(func(string) *model.Channel); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetChannels provides a mock function with given fields:
func (_m *ChannelService) GetChannels() ([]model.Channel, error) {
	ret := _m.Called()

	var r0 []model.Channel
	if rf, ok := ret.Get(0).(func() []model.Channel); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetChannelsByPage provides a mock function with given fields: page
func (_m *ChannelService) GetChannelsByPage(page int) ([]model.Channel, error) {
	ret := _m.Called(page)

	var r0 []model.Channel
	if rf, ok := ret.Get(0).(func(int) []model.Channel); ok {
		r0 = rf(page)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(page)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
