// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	model "github.com/VladPetriv/scanner_backend/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// SavedRepo is an autogenerated mock type for the SavedRepo type
type SavedRepo struct {
	mock.Mock
}

// CreateSavedMessage provides a mock function with given fields: saved
func (_m *SavedRepo) CreateSavedMessage(saved *model.Saved) error {
	ret := _m.Called(saved)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Saved) error); ok {
		r0 = rf(saved)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteSavedMessage provides a mock function with given fields: id
func (_m *SavedRepo) DeleteSavedMessage(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetSavedMessageByID provides a mock function with given fields: id
func (_m *SavedRepo) GetSavedMessageByID(id int) (*model.Saved, error) {
	ret := _m.Called(id)

	var r0 *model.Saved
	if rf, ok := ret.Get(0).(func(int) *model.Saved); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Saved)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSavedMessages provides a mock function with given fields: userID
func (_m *SavedRepo) GetSavedMessages(userID int) ([]model.Saved, error) {
	ret := _m.Called(userID)

	var r0 []model.Saved
	if rf, ok := ret.Get(0).(func(int) []model.Saved); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Saved)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSavedRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewSavedRepo creates a new instance of SavedRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSavedRepo(t mockConstructorTestingTNewSavedRepo) *SavedRepo {
	mock := &SavedRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
